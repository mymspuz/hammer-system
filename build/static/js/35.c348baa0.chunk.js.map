{"version":3,"sources":["layouts/inner-app-layout/index.js","views/app-views/main/planner/index.js"],"names":["useBreakpoint","Grid","SideContent","props","sideContent","sideContentWidth","border","className","style","width","SideContentMobile","visible","onSideContentClose","placement","closable","onClose","bodyStyle","paddingLeft","paddingRight","InnerAppLayout","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","useState","setVisible","e","MenuOutlined","onClick","ResponsiveReactGridLayout","WidthProvider","Responsive","MySave","downloadTxtFile","element","document","createElement","file","Blob","JSON","stringify","dataLayout","type","href","URL","createObjectURL","download","body","appendChild","click","icon","CloudDownloadOutlined","this","React","Component","ToolBoxItem","onTakeItem","bind","undefined","item","src","i","alt","ToolBox","items","map","ToolboxLayout","state","currentBreakpoint","compactType","mounted","layouts","lg","initialLayout","layout","toolbox","onBreakpointChange","breakpoint","setState","prevState","filter","onPutItem","onLayoutChange","beforeUpload","Promise","resolve","reader","FileReader","readAsText","onload","result","parse","target","forEach","l","_","backgroundColor","xs","sm","md","UploadOutlined","measureBeforeMount","useCSSTransforms","preventCollision","generateDOM","defaultProps","rowHeight","isResizable","cols","xxs","range","x","y","w","h","toString","static"],"mappings":"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","file":"static/js/35.c348baa0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={`side-content ${border? 'with-border': ''}`} style={{width: `${sideContentWidth}px`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\tvisible={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<div className={`main-content ${pageHeader? 'has-page-header' : ''} ${sideContentGutter? 'gutter' : 'no-gutter'}`}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","import 'react-grid-layout/css/styles.css'\r\nimport 'react-resizable/css/styles.css'\r\n\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport InnerAppLayout from \"../../../../layouts/inner-app-layout\";\r\nimport { Upload, Col, Button } from \"antd\";\r\nimport { CloudDownloadOutlined, UploadOutlined } from '@ant-design/icons';\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nclass MySave extends React.Component {\r\n    downloadTxtFile = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([JSON.stringify(this.props.dataLayout)], {type: 'text/plain;charset=utf-8'});\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"mySetting.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    }\r\n    render() {\r\n        return (\r\n                <Button\r\n                    icon={<CloudDownloadOutlined/>}\r\n                    onClick={this.downloadTxtFile}\r\n                >\r\n                    Сохранить план\r\n                </Button>\r\n        );\r\n    }\r\n}\r\n\r\nclass ToolBoxItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"toolbox__items__item\"\r\n                onClick={this.props.onTakeItem.bind(undefined, this.props.item)}\r\n            >\r\n                <img src={`/img/planner/plan${this.props.item.i}.png`} alt=\"avatar\" className=\"img-fluid\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ToolBox extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"toolbox\">\r\n                <div className=\"toolbox__items\">\r\n                    {this.props.items.map(item => (\r\n                        <ToolBoxItem\r\n                            key={item.i}\r\n                            item={item}\r\n                            onTakeItem={this.props.onTakeItem}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class ToolboxLayout extends React.Component {\r\n    static defaultProps = {\r\n        className: \"layout\",\r\n        rowHeight: 30,\r\n        isResizable: false,\r\n        onLayoutChange: function() {},\r\n        cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n        initialLayout: generateLayout()\r\n    };\r\n\r\n    state = {\r\n        currentBreakpoint: \"lg\",\r\n        compactType: null,\r\n        mounted: false,\r\n        layouts: { lg: this.props.initialLayout },\r\n        layout: null,\r\n        toolbox: { lg: [] }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true });\r\n        this.state.layouts[this.state.currentBreakpoint].forEach(e => this.onPutItem(e))\r\n    }\r\n\r\n    onBreakpointChange = breakpoint => {\r\n        this.setState(prevState => ({\r\n            currentBreakpoint: breakpoint,\r\n            toolbox: {\r\n                ...prevState.toolbox,\r\n                [breakpoint]:\r\n                prevState.toolbox[breakpoint] ||\r\n                prevState.toolbox[prevState.currentBreakpoint] ||\r\n                []\r\n            }\r\n        }));\r\n    };\r\n\r\n    onTakeItem = item => {\r\n        this.setState(prevState => ({\r\n            toolbox: {\r\n                ...prevState.toolbox,\r\n                [prevState.currentBreakpoint]: prevState.toolbox[\r\n                    prevState.currentBreakpoint\r\n                    ].filter(({ i }) => i !== item.i)\r\n            },\r\n            layouts: {\r\n                ...prevState.layouts,\r\n                [prevState.currentBreakpoint]: [\r\n                    ...prevState.layouts[prevState.currentBreakpoint],\r\n                    item\r\n                ]\r\n            }\r\n        }));\r\n    };\r\n\r\n    onPutItem = item => {\r\n        this.setState(prevState => {\r\n            return {\r\n                toolbox: {\r\n                    ...prevState.toolbox,\r\n                    [prevState.currentBreakpoint]: [\r\n                        ...(prevState.toolbox[prevState.currentBreakpoint] || []),\r\n                        item\r\n                    ]\r\n                },\r\n                layouts: {\r\n                    ...prevState.layouts,\r\n                    [prevState.currentBreakpoint]: prevState.layouts[\r\n                        prevState.currentBreakpoint\r\n                        ].filter(({ i }) => i !== item.i)\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    onLayoutChange = (layout, layouts) => {\r\n        this.props.onLayoutChange(layout, layouts);\r\n        this.setState({ layouts, layout });\r\n    };\r\n\r\n    generateDOM() {\r\n        return _.map(this.state.layouts[this.state.currentBreakpoint], l => {\r\n            return (\r\n                <div key={l.i} style={{backgroundColor: '#eee'}}>\r\n                    <div className=\"hide-button\" onClick={this.onPutItem.bind(this, l)}>\r\n                        &times;\r\n                    </div>\r\n                    <img src={`/img/planner/plan${l.i}.png`} alt=\"avatar\" className=\"img-fluid\" />\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    beforeUpload = file => {\r\n        return new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = (e) => {\r\n                const result = JSON.parse(e.target.result)\r\n                this.state.layout.forEach(l => this.onPutItem(l))\r\n                result.forEach(l => this.onTakeItem(l))\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <Col xs={24} sm={24} md={24} lg={16}>\r\n                <MySave dataLayout={this.state.layout}/>\r\n                <Upload beforeUpload={this.beforeUpload}>\r\n                    <Button>\r\n                        <UploadOutlined /> Загрузить план\r\n                    </Button>\r\n                </Upload>\r\n            </Col>\r\n            <div className=\"chat\">\r\n                <InnerAppLayout\r\n                    sideContent={\r\n                        <ToolBox\r\n                            items={this.state.toolbox[this.state.currentBreakpoint] || []}\r\n                            onTakeItem={this.onTakeItem}\r\n                        />\r\n                    }\r\n                    mainContent={\r\n                        <ResponsiveReactGridLayout\r\n                            {...this.props}\r\n                            layouts={this.state.layouts}\r\n                            onBreakpointChange={this.onBreakpointChange}\r\n                            onLayoutChange={this.onLayoutChange}\r\n                            // WidthProvider option\r\n                            measureBeforeMount={false}\r\n                            useCSSTransforms={this.state.mounted}\r\n                            compactType={this.state.compactType}\r\n                            preventCollision={!this.state.compactType}\r\n                        >\r\n                            {this.generateDOM()}\r\n                        </ResponsiveReactGridLayout>\r\n                    }\r\n                    sideContentWidth={450}\r\n                    sideContentGutter={false}\r\n                    border\r\n                />\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction generateLayout() {\r\n    return _.map(_.range(0, 5), function(item, i) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            w: 1,\r\n            h: 4,\r\n            i: i.toString(),\r\n            static: false\r\n        };\r\n    });\r\n}\r\n\r\n// if (process.env.STATIC_EXAMPLES === true) {\r\n//     import(\"../test-hook.jsx\").then(fn => fn.default(ToolboxLayout));\r\n// }"],"sourceRoot":""}