{"version":3,"sources":["views/app-views/main/clients/profile/index.js"],"names":["Profile","userId","useParams","history","useHistory","location","useLocation","useState","user","isLoading","isError","status","message","state","setState","useEffect","remoteUser","axios","API_BASE_URL","then","response","data","avatarUrl","userData","id","img","catch","error","push","pathname","replace","cover","alignItems","mobileFlex","className","size","src","icon","onChange","info","key","file","getBase64","originFileObj","imageUrl","success","content","duration","loading","showUploadList","action","type","onClick","name","layout","initialValues","email","username","phone","website","address","street","city","zipcode","onFinish","values","setTimeout","phoneNumber","postcode","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType"],"mappings":"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","file":"static/js/18.0e17e6c2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from \"../../../../../configs/AppConfig\";\r\nimport userData from \"../../../../../assets/data/user-list.data.json\";\r\nimport Flex from \"../../../../../components/shared-components/Flex\";\r\nimport {Avatar, Button, Col, Form, Row, Upload, message, Input, DatePicker} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {ROW_GUTTER} from \"../../../../../constants/ThemeConstant\";\r\nimport Loading from \"../../../../../components/shared-components/Loading\";\r\n\r\nconst Profile = () => {\r\n\r\n    const { userId } = useParams()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const [state, setState] = useState({\r\n        user: null,\r\n        isLoading: true,\r\n        isError: {status: false, message: ''}\r\n    })\r\n\r\n    const avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n\r\n    useEffect(() => {\r\n        const remoteUser = async () => {\r\n            setState({...state, isLoading: true})\r\n            await axios(`${API_BASE_URL}/users/${userId}`)\r\n                .then(response => {\r\n                    response.data.avatarUrl = userData[response.data.id - 1].img\r\n                    setState({...state, user: response.data, isLoading: false})\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 404) {\r\n                        history.push(location.pathname.replace(`/${userId}`, ''))\r\n                    } else {\r\n                        setState({...state, isError: {status: true, message: 'Error load user!'}, isLoading: false})\r\n                    }\r\n                })\r\n        }\r\n\r\n        remoteUser()\r\n    }, [])\r\n\r\n    const getBase64 = (img, callback) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    const onFinish = values => {\r\n        const key = 'updatable';\r\n        setState({...state, isLoading: true})\r\n        // message.loading({ content: 'Updating...', key });\r\n        setTimeout(() => {\r\n            setState({\r\n                ...state,\r\n                user: {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    username: values.username,\r\n                    phone: values.phoneNumber,\r\n                    website: values.website,\r\n                    address: {\r\n                        city: values.city,\r\n                        zipcode: values.postcode\r\n                    }\r\n                },\r\n                isLoading: false\r\n            })\r\n            // message.success({ content: 'Done!', key, duration: 2 });\r\n            history.push(location.pathname.replace(`/${userId}`, ''))\r\n        }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onUploadAavater = info => {\r\n        const key = 'updatable';\r\n        if (info.file.status === 'uploading') {\r\n            message.loading({ content: 'Uploading...', key, duration: 1000 });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            this.getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    avatarUrl: imageUrl,\r\n                }),\r\n            );\r\n            message.success({ content: 'Uploaded!', key,  duration: 1.5 });\r\n        }\r\n    };\r\n\r\n    const onRemoveAvater = () => {\r\n        setState({\r\n            ...state,\r\n            user: {...state.user, avatarUrl: ''}\r\n        })\r\n    }\r\n\r\n    return (\r\n            state.isLoading ? (\r\n                <Loading cover=\"content\"/>\r\n            ) : (\r\n                <>\r\n                    <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n                        <Avatar size={90} src={state.user.avatarUrl} icon={<UserOutlined />}/>\r\n                        <div className=\"ml-md-3 mt-md-0 mt-3\">\r\n                            <Upload onChange={onUploadAavater} showUploadList={false} action={avatarEndpoint}>\r\n                                <Button type=\"primary\">Change Avatar</Button>\r\n                            </Upload>\r\n                            <Button className=\"ml-2\" onClick={onRemoveAvater}>Remove</Button>\r\n                        </div>\r\n                    </Flex>\r\n                    <div className=\"mt-4\">\r\n                        <Form\r\n                            name=\"basicInformation\"\r\n                            layout=\"vertical\"\r\n                            initialValues={\r\n                                {\r\n                                    'name': state.user.name,\r\n                                    'email': state.user.email,\r\n                                    'username': state.user.username,\r\n                                    'dateOfBirth': null,\r\n                                    'phoneNumber': state.user.phone,\r\n                                    'website': state.user.website,\r\n                                    'address': state.user.address.street,\r\n                                    'city': state.user.address.city,\r\n                                    'postcode': state.user.address.zipcode\r\n                                }\r\n                            }\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            <Row>\r\n                                <Col xs={24} sm={24} md={24} lg={16}>\r\n                                    <Row gutter={ROW_GUTTER}>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Name\"\r\n                                                name=\"name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Please input your name!',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Username\"\r\n                                                name=\"username\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Please input your username!'\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Email\"\r\n                                                name=\"email\"\r\n                                                rules={[{\r\n                                                    required: true,\r\n                                                    type: 'email',\r\n                                                    message: 'Please enter a valid email!'\r\n                                                }]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Date of Birth\"\r\n                                                name=\"dateOfBirth\"\r\n                                            >\r\n                                                <DatePicker className=\"w-100\"/>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Phone Number\"\r\n                                                name=\"phoneNumber\"\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Website\"\r\n                                                name=\"website\"\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24}>\r\n                                            <Form.Item\r\n                                                label=\"Address\"\r\n                                                name=\"address\"\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"City\"\r\n                                                name=\"city\"\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={12}>\r\n                                            <Form.Item\r\n                                                label=\"Post code\"\r\n                                                name=\"postcode\"\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        Save Change\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </>\r\n            )\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}